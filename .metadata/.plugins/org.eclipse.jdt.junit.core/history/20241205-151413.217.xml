<?xml version="1.0" encoding="UTF-8"?><testrun name="testSodukoSolver" project="SodukoSolver" tests="20" started="20" failures="20" errors="0" ignored="0">
  <testsuite name="test.testSodukoSolver" time="0.005" displayname="testSodukoSolver" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]">
    <testcase name="isValidEmptyBox" classname="test.testSodukoSolver" time="0.001" displayname="true if the box is empty or if the digit in the box row, col follows" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:isValidEmptyBox()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.isValidEmptyBox(testSodukoSolver.java:107)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="isValidOutsideRange" classname="test.testSodukoSolver" time="0.0" displayname="IndexOutOfBoundsException if row or col is outside the range [0..8]" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:isValidOutsideRange()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.isValidOutsideRange(testSodukoSolver.java:101)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="solveGivenSoduko" classname="test.testSodukoSolver" time="0.0" displayname="solve given soduko, should return true" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:solveGivenSoduko()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet implemented&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.solveGivenSoduko(testSodukoSolver.java:25)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="getCheckDigitInBox" classname="test.testSodukoSolver" time="0.0" displayname="gets the digit in box row" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:getCheckDigitInBox()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet implemented&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.getCheckDigitInBox(testSodukoSolver.java:63)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="solveTryNotPossible" classname="test.testSodukoSolver" time="0.0" displayname="not possible to solve, should return false" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:solveTryNotPossible()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet implemented&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.solveTryNotPossible(testSodukoSolver.java:31)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="getCheckThatDigitIsZeroIfBoxISEmpty" classname="test.testSodukoSolver" time="0.0" displayname="gets 0 if the box i empty" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:getCheckThatDigitIsZeroIfBoxISEmpty()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet implemented&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.getCheckThatDigitIsZeroIfBoxISEmpty(testSodukoSolver.java:69)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="isAllValidSodukoRules" classname="test.testSodukoSolver" time="0.0" displayname="true if all filled in digits follows the the sudoku rules" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:isAllValidSodukoRules()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.isAllValidSodukoRules(testSodukoSolver.java:119)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="clearCheck" classname="test.testSodukoSolver" time="0.0" displayname="Test that box, row, col, is empty, 0, after cleared" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:clearCheck()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.clearCheck(testSodukoSolver.java:85)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="isAllValidSodukoRulesNotFollowed" classname="test.testSodukoSolver" time="0.0" displayname="false if all filled in digits does NOT follows the the sudoku rules" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:isAllValidSodukoRulesNotFollowed()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.isAllValidSodukoRulesNotFollowed(testSodukoSolver.java:125)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="getGrid" classname="test.testSodukoSolver" time="0.0" displayname="a matix with all digits in the sudoku grid gets returned" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:getGrid()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.getGrid(testSodukoSolver.java:148)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="setCheckIndexOutOfBoundsException" classname="test.testSodukoSolver" time="0.0" displayname="throws IndexOutOfBoundsException if row or col is outside the range[0..8]" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:setCheckIndexOutOfBoundsException()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet implemented&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.setCheckIndexOutOfBoundsException(testSodukoSolver.java:44)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="setCheckCorrectDigit" classname="test.testSodukoSolver" time="0.001" displayname="check if digit is in correct box" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:setCheckCorrectDigit()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet implemented&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.setCheckCorrectDigit(testSodukoSolver.java:38)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="getCheckIndexOutOfBoundsException" classname="test.testSodukoSolver" time="0.0" displayname="IndexOutOfBoundsException if row or col is outside the range[0..8]" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:getCheckIndexOutOfBoundsException()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet implemented&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.getCheckIndexOutOfBoundsException(testSodukoSolver.java:57)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="solveEmptySoduko" classname="test.testSodukoSolver" time="0.0" displayname="solve an empty soduko, should be able and return true" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:solveEmptySoduko()]">
      <failure>
        <expected>true</expected>
        <actual>false</actual>
        org.opentest4j.AssertionFailedError: Should be solved and return true ==&gt; expected: &lt;true&gt; but was: &lt;false&gt;&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertTrue.failNotTrue(AssertTrue.java:63)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:36)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:214)&#13;
	at SodukoSolver/test.testSodukoSolver.solveEmptySoduko(testSodukoSolver.java:19)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;

      </failure>
    </testcase>
    <testcase name="clearAllCheck" classname="test.testSodukoSolver" time="0.0" displayname="Test that every box in grid is empty, 0, after clearAll" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:clearAllCheck()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.clearAllCheck(testSodukoSolver.java:93)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="isValidSodukoRules" classname="test.testSodukoSolver" time="0.0" displayname="true if the digit in the box row, col follows the sudoku rules" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:isValidSodukoRules()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.isValidSodukoRules(testSodukoSolver.java:112)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="setCheckIllegalArgumentException" classname="test.testSodukoSolver" time="0.0" displayname="IllegalArgumentException if digit is outside the range [0..9]" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:setCheckIllegalArgumentException()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet implemented&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.setCheckIllegalArgumentException(testSodukoSolver.java:50)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="clearCheckIndexOutOfBoundsException" classname="test.testSodukoSolver" time="0.0" displayname="IndexOutOfBoundsException if row or col is outside the range[0..8]" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:clearCheckIndexOutOfBoundsException()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet implemented&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.clearCheckIndexOutOfBoundsException(testSodukoSolver.java:78)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="setGridWrongDimensions" classname="test.testSodukoSolver" time="0.0" displayname="IllegalArgumentException if m has the wrong dimension" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:setGridWrongDimensions()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.setGridWrongDimensions(testSodukoSolver.java:133)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="setGridValuesOutsideRange" classname="test.testSodukoSolver" time="0.0" displayname="IllegalArgumentException if m contains values outside the range [0..9]" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:setGridValuesOutsideRange()]">
      <failure>org.opentest4j.AssertionFailedError: Not yet&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)&#13;
	at org.junit.jupiter.api@5.11.0/org.junit.jupiter.api.Assertions.fail(Assertions.java:138)&#13;
	at SodukoSolver/test.testSodukoSolver.setGridValuesOutsideRange(testSodukoSolver.java:139)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</failure>
    </testcase>
  </testsuite>
</testrun>
