<?xml version="1.0" encoding="UTF-8"?><testrun name="testSodukoSolver" project="SodukoSolver" tests="19" started="19" failures="0" errors="3" ignored="0">
  <testsuite name="test.testSodukoSolver" time="0.063" displayname="testSodukoSolver" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]">
    <testcase name="isValidEmptyBox" classname="test.testSodukoSolver" time="0.012" displayname="true if the box is empty" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:isValidEmptyBox()]"/>
    <testcase name="isValidOutsideRange" classname="test.testSodukoSolver" time="0.003" displayname="IndexOutOfBoundsException if row or col is outside the range [0..8]" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:isValidOutsideRange()]"/>
    <testcase name="solveGivenSoduko" classname="test.testSodukoSolver" time="0.009" displayname="solve given soduko, should return true" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:solveGivenSoduko()]">
      <error>java.lang.ArrayIndexOutOfBoundsException: Index 9 out of bounds for length 9&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:28)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:31)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:31)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:31)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:31)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:16)&#13;
	at SodukoSolver/test.testSodukoSolver.solveGivenSoduko(testSodukoSolver.java:55)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</error>
    </testcase>
    <testcase name="getCheckDigitInBox" classname="test.testSodukoSolver" time="0.003" displayname="gets the digit in box row" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:getCheckDigitInBox()]"/>
    <testcase name="solveTryNotPossible" classname="test.testSodukoSolver" time="0.003" displayname="not possible to solve, should return false" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:solveTryNotPossible()]">
      <error>java.lang.ArrayIndexOutOfBoundsException: Index 9 out of bounds for length 9&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:28)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:31)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:16)&#13;
	at SodukoSolver/test.testSodukoSolver.solveTryNotPossible(testSodukoSolver.java:64)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</error>
    </testcase>
    <testcase name="getCheckThatDigitIsZeroIfBoxISEmpty" classname="test.testSodukoSolver" time="0.001" displayname="gets 0 if the box i empty" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:getCheckThatDigitIsZeroIfBoxISEmpty()]"/>
    <testcase name="isAllValidSodukoRules" classname="test.testSodukoSolver" time="0.001" displayname="true if all filled in digits follows the the sudoku rules" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:isAllValidSodukoRules()]"/>
    <testcase name="clearCheck" classname="test.testSodukoSolver" time="0.001" displayname="Test that box, row, col, is empty, 0, after cleared" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:clearCheck()]"/>
    <testcase name="isAllValidSodukoRulesNotFollowed" classname="test.testSodukoSolver" time="0.002" displayname="false if all filled in digits does NOT follows the the sudoku rules" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:isAllValidSodukoRulesNotFollowed()]"/>
    <testcase name="getGrid" classname="test.testSodukoSolver" time="0.002" displayname="a matix with all digits in the sudoku grid gets returned" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:getGrid()]"/>
    <testcase name="setCheckIndexOutOfBoundsException" classname="test.testSodukoSolver" time="0.002" displayname="throws IndexOutOfBoundsException if row or col is outside the range[0..8]" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:setCheckIndexOutOfBoundsException()]"/>
    <testcase name="getCheckIndexOutOfBoundsException" classname="test.testSodukoSolver" time="0.002" displayname="IndexOutOfBoundsException if row or col is outside the range[0..8]" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:getCheckIndexOutOfBoundsException()]"/>
    <testcase name="solveEmptySoduko" classname="test.testSodukoSolver" time="0.003" displayname="solve an empty soduko, should be able and return true" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:solveEmptySoduko()]">
      <error>java.lang.ArrayIndexOutOfBoundsException: Index 9 out of bounds for length 9&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:28)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:39)&#13;
	at SodukoSolver/sodukoSolver.SudokuSolver.solve(SudokuSolver.java:16)&#13;
	at SodukoSolver/test.testSodukoSolver.solveEmptySoduko(testSodukoSolver.java:21)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</error>
    </testcase>
    <testcase name="clearAllCheck" classname="test.testSodukoSolver" time="0.001" displayname="Test that every box in grid is empty, 0, after clearAll" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:clearAllCheck()]"/>
    <testcase name="isValidSodukoRules" classname="test.testSodukoSolver" time="0.001" displayname="true if the digit in the box row, col follows the sudoku rules" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:isValidSodukoRules()]"/>
    <testcase name="setCheckIllegalArgumentException" classname="test.testSodukoSolver" time="0.001" displayname="IllegalArgumentException if digit is outside the range [0..9]" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:setCheckIllegalArgumentException()]"/>
    <testcase name="clearCheckIndexOutOfBoundsException" classname="test.testSodukoSolver" time="0.001" displayname="IndexOutOfBoundsException if row or col is outside the range[0..8]" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:clearCheckIndexOutOfBoundsException()]"/>
    <testcase name="setGridWrongDimensions" classname="test.testSodukoSolver" time="0.001" displayname="IllegalArgumentException if m has the wrong dimension" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:setGridWrongDimensions()]"/>
    <testcase name="setGridValuesOutsideRange" classname="test.testSodukoSolver" time="0.001" displayname="IllegalArgumentException if m contains values outside the range [0..9]" uniqueid="[engine:junit-jupiter]/[class:test.testSodukoSolver]/[method:setGridValuesOutsideRange()]"/>
  </testsuite>
</testrun>
