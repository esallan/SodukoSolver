public class SudokuSolver {
    private int[][] board;

    public SudokuSolver() {
        board = new int[9][9]; // initialize a 9x9 board
    }

    // Solve the Sudoku puzzle
    public boolean solve() {
        // Find the next empty cell (denoted by 0)
        for (int row = 0; row < 9; row++) {
            for (int col = 0; col < 9; col++) {
                if (board[row][col] == 0) { // Find an empty cell
                    // Try placing digits from 1 to 9
                    for (int num = 1; num <= 9; num++) {
                        if (isValid(row, col, num)) { // Check if it's a valid move
                            board[row][col] = num; // Place the number
                            
                            // Recursively attempt to solve the next cell
                            if (solve()) {
                                return true; // If the puzzle is solved, return true
                            }

                            // If not successful, reset the cell and try the next number
                            board[row][col] = 0;
                        }
                    }
                    return false; // If no valid number can be placed, return false
                }
            }
        }
        return true; // If no empty cells are found, the board is solved
    }

    // Check if placing num at (row, col) is valid
    private boolean isValid(int row, int col, int num) {
        // Check row and column
        for (int i = 0; i < 9; i++) {
            if (board[row][i] == num || board[i][col] == num) {
                return false;
            }
        }

        // Check 3x3 subgrid
        int startRow = row - row % 3;
        int startCol = col - col % 3;
        for (int i = startRow; i < startRow + 3; i++) {
            for (int j = startCol; j < startCol + 3; j++) {
                if (board[i][j] == num) {
                    return false;
                }
            }
        }

        return true; // If no conflicts are found, the number is valid
    }

    // Helper method to set a value in the Sudoku board
    public void set(int row, int col, int value) {
        board[row][col] = value;
    }

    // Helper method to get the value at a specific cell
    public int get(int row, int col) {
        return board[row][col];
    }
}
